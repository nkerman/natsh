#!/usr/bin/env python
# Taken from natpy.misc module
from datetime import timedelta
import datetime

def mjd(date = None):
    """
    Quick function to get today's Modified Julian Day (MJD) or any specified date's. Works to an integer precision (i.e. +/-1). This might be to within +/- 1 day, I'm still not sure exactly how to deal with the noon/midnight thing...
    Input: 
    date (optional) : Default none get's today's date. If specifying, format as tuple of ints (YEAR,MONTH,DAY), i.e. "date=(2022,4,1)" for April 1, 2022.
    """
    if not date:
        ord_date = datetime.date.today().toordinal()
    else:
        if type(date) == datetime.date:
            ord_date = date.toordinal()
        else: 
            ord_date = datetime.date(*date).toordinal()
        
    jd = ord_date + 1721425
    mjd = jd - 2400001
    return mjd

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-d","--date", help="What date do you want to convert to a modified Julian date (MJD)?", nargs="+", type=int)
    args = parser.parse_args()
    if args.date:
        mjdate = mjd(args.date)
    else:
        print("No date in MJD specified, assuming today.")
        mjdate = mjd()
    print(mjdate)
